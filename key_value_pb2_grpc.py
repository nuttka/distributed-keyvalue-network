# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import key_value_pb2 as key__value__pb2


class StorageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.insert = channel.unary_unary(
                '/key_value.Storage/insert',
                request_serializer=key__value__pb2.PairKeyValue.SerializeToString,
                response_deserializer=key__value__pb2.InsertReply.FromString,
                )
        self.get = channel.unary_unary(
                '/key_value.Storage/get',
                request_serializer=key__value__pb2.Key.SerializeToString,
                response_deserializer=key__value__pb2.Value.FromString,
                )
        self.activate = channel.unary_unary(
                '/key_value.Storage/activate',
                request_serializer=key__value__pb2.ServerHost.SerializeToString,
                response_deserializer=key__value__pb2.NumberKeys.FromString,
                )
        self.finish = channel.unary_unary(
                '/key_value.Storage/finish',
                request_serializer=key__value__pb2.FinishParams.SerializeToString,
                response_deserializer=key__value__pb2.Finish.FromString,
                )


class StorageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def insert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def activate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'insert': grpc.unary_unary_rpc_method_handler(
                    servicer.insert,
                    request_deserializer=key__value__pb2.PairKeyValue.FromString,
                    response_serializer=key__value__pb2.InsertReply.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=key__value__pb2.Key.FromString,
                    response_serializer=key__value__pb2.Value.SerializeToString,
            ),
            'activate': grpc.unary_unary_rpc_method_handler(
                    servicer.activate,
                    request_deserializer=key__value__pb2.ServerHost.FromString,
                    response_serializer=key__value__pb2.NumberKeys.SerializeToString,
            ),
            'finish': grpc.unary_unary_rpc_method_handler(
                    servicer.finish,
                    request_deserializer=key__value__pb2.FinishParams.FromString,
                    response_serializer=key__value__pb2.Finish.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'key_value.Storage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Storage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/key_value.Storage/insert',
            key__value__pb2.PairKeyValue.SerializeToString,
            key__value__pb2.InsertReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/key_value.Storage/get',
            key__value__pb2.Key.SerializeToString,
            key__value__pb2.Value.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/key_value.Storage/activate',
            key__value__pb2.ServerHost.SerializeToString,
            key__value__pb2.NumberKeys.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def finish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/key_value.Storage/finish',
            key__value__pb2.FinishParams.SerializeToString,
            key__value__pb2.Finish.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
